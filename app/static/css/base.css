.posts {
  list-style-type: none;
  padding: 0px;
  margin: 16px 0px 0px 0px;
  border-top: 1px solid #e0e0e0;
}

.post {
  padding: 8px;
  border-bottom: 1px solid #e0e0e0;
}

.post-author {
  font-weight: bold;
}

.post-thumbnail {
  position: absolute;
}

.post-content {
  /* margin-left: 48px; */
  /* min-height: 48px; */
}

#button-delete {
  padding-top: 7px;
}

[hidden] {
  display: none !important;
}

.submit-btn {
  paddint-top: 15px;
}

.log-button {
  padding-top: 8px;
  margin-right: 10px;
}

.close {
  float: right;
  font-size: 21px;
  font-weight: bold;
  line-height: 1;
  color: #000;
  text-shadow: 0 1px 0 #fff;
  filter: alpha(opacity=20);
  opacity: .2;
}

.selectwidthauto {
  width: auto !important;
}

.input-mini {
  width: 60px;
}

.input-small {
  width: 90px;
}

.input-medium {
  width: 150px;
}

.input-large {
  width: 210px;
  height: 34px;
}

.input-xlarge {
  width: 270px;
}

.input-xxlarge {
  width: 530px;
}


.result-body {
  list-style-type: none;
  padding: 0px;
  margin: 16px 0px 0px 0px;
  border-top: 1px solid #e0e0e0;
}

.result-detail {
  padding: 5px;
  /* border-bottom: 1px solid #e0e0e0; */
}

.navbar-nav>.user-menu>.dropdown-menu>li.user-header {
  height: 75px;
  padding: 10px;
  text-align: center;
}

.navbar-nav>.user-menu>.dropdown-menu>li.user-header>img {
  z-index: 5;
  height: 90px;
  width: 90px;
  border: 3px solid;
  border-color: transparent;
  border-color: rgba(255, 255, 255, 0.2);
}

.navbar-nav>.user-menu>.dropdown-menu>li.user-header>p {
  z-index: 5;
  color: #fff;
  color: rgba(255, 255, 255, 0.8);
  font-size: 17px;
  margin-top: 10px;
}

.navbar-nav>.user-menu>.dropdown-menu>li.user-header>p>small {
  display: block;
  font-size: 12px;
}


.content-wrapper p {
  padding: 0 10px;
  font-size: 16px;
  position: relative;
  z-index: 30;
}

.bring-up {
  position: relative;
  z-index: 30;
}

.nth-2-center>tbody>tr>td:last-of-type {
  text-align: center!important;
}

.content {
  font-size: 16px;
  z-index: 500;
}

#components>h3 {
  font-size: 25px;
  color: #000;
}

#components>h4 {
  font-size: 20px;
  color: #000;
}

ul {
  margin-bottom: 20px;
}

.page-header {
  margin: 20px 0 10px 0!important;
  position: relative;
  z-index: 1;
  font-size: 30px;
}

.content {
  padding-left: 150px;
  padding-right: 150px;
}

.select-move {
  margin-top: 3px;
}

.select2-container--default .select2-selection--single .select2-selection__rendered {
  color: #444;
  line-height: 23px;
}

.btn-index {
  margin-left: 85px;
}

.gu-mirror {
  position: fixed !important;
  margin: 0 !important;
  z-index: 9999 !important;
  opacity: 0.8;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
  filter: alpha(opacity=80);
}

.gu-hide {
  display: none !important;
}

.gu-unselectable {
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  user-select: none !important;
}

.gu-transit {
  opacity: 0.2;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
  filter: alpha(opacity=20);
}

.drag-wrapper {
  display: table;
}


html,
body {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

*,
*:before,
*:after {
  -webkit-box-sizing: inherit;
  -moz-box-sizing: inherit;
  box-sizing: inherit;
}

.tagline {
  position: relative;
  margin-top: 0;
}

.tagline-text {
  vertical-align: middle;
}

.__slackin {
  float: right;
  margin-left: 10px;
  vertical-align: middle;
}

.promo {
  margin-bottom: 0;
  font-style: italic;
  padding: 10px;
  background-color: #ff4020;
  border-bottom: 5px solid #c00;
}


pre {
  white-space: pre-wrap;
}

pre code {
  color: #fff;
  font-size: 14px;
  line-height: 1.3;
}

label {
  display: block;
  margin-bottom: 15px;
}

sub {
  display: block;
  text-align: right;
  margin-top: -10px;
  font-size: 11px;
  font-style: italic;
}

ul {
  margin: 0;
  padding: 0;
}

.gh-fork {
  position: fixed;
  top: 0;
  right: 0;
  border: 0;
}




/* dragula-specific example page styles */

.drag-wrapper {
  display: table;
}

.drag-container {
  display: table-cell;
  background-color: rgba(255, 255, 255, 0.2);
  width: 50%;
}

.drag-container:nth-child(odd) {
  background-color: rgba(0, 0, 0, 0.2);
}



/*
 * note that styling gu-mirror directly is a bad practice because it's too generic.
 * you're better off giving the draggable elements a unique class and styling that directly!
 */

.drag-container>div,
.gu-mirror {
  margin: 10px;
  padding: 10px;
  background-color: rgba(0, 0, 0, 0.2);
  transition: opacity 0.4s ease-in-out;
}

.drag-container>div {
  cursor: move;
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
}

.gu-mirror {
  cursor: grabbing;
  cursor: -moz-grabbing;
  cursor: -webkit-grabbing;
}

.drag-container .ex-moved {
  background-color: #e74c3c;
}

.drag-container.ex-over {
  background-color: rgba(255, 255, 255, 0.3);
}

#left-lovehandles>div,
#right-lovehandles>div {
  cursor: initial;
}

.handle {
  padding: 0 5px;
  margin-right: 5px;
  background-color: rgba(0, 0, 0, 0.4);
  cursor: move;
}

.image-thing {
  margin: 20px 0;
  display: block;
  text-align: center;
}

.drag-box {
  min-height: 450px;
}

#questions{
  visibility: hidden;
}
